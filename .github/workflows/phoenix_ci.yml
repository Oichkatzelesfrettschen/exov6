name: Phoenix CI
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y clang-18 lld-18 llvm-18 make cmake ninja-build
      - name: Build ISA variants
        run: |
          chmod +x scripts/build_isa_variants.sh
          # Build x86 variants
          ARCH=x86_64 ISA_VARIANT="baseline,sse2,avx2,avx512" ./scripts/build_isa_variants.sh
          # Build ARM NEON variant
          ARCH=aarch64 ISA_VARIANT="neon64" ./scripts/build_isa_variants.sh
          # Build PowerPC AltiVec variant
          ARCH=ppc64 ISA_VARIANT="altivec" ./scripts/build_isa_variants.sh
      - name: Build metrics tool
        run: clang -std=c2x -O2 tools/phoenix_metrics.c -o tools/phoenix_metrics
      - name: Run tests and benchmarks
        run: |
          mkdir bench_results
          variants="x86-legacy x86-sse2 x86-avx2 x86-avx512 arm-neon power-altivec"
          for v in $variants; do
            make -C tests/microbench run > bench_results/${v}_bench.txt
            pytest -q > bench_results/${v}_tests.txt || true
            tools/phoenix_metrics kernel 1 > bench_results/${v}_metrics.txt || true
          done
      - name: Check purity
        run: |
          fail=0
          for f in bench_results/*_metrics.txt; do
            purity=$(grep '^PURITY' "$f" | cut -d':' -f2)
            if awk "BEGIN{exit !( $purity >= 1 )}"; then
              echo "Purity for $f ok ($purity)"
            else
              echo "Purity below threshold: $purity"
              fail=1
            fi
          done
          exit $fail
      - uses: actions/upload-artifact@v3
        with:
          name: bench-results
          path: bench_results
